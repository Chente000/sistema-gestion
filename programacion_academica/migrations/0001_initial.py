# Generated by Django 5.2 on 2025-05-08 00:59

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_aula', models.CharField(help_text='Ej: A-101, LAB-INF02', max_length=20, unique=True)),
                ('nombre_aula', models.CharField(blank=True, max_length=100)),
                ('capacidad', models.PositiveIntegerField(default=0)),
                ('tipo_aula', models.CharField(choices=[('TEORICA', 'Teórica'), ('PRACTICA', 'Práctica'), ('LABORATORIO', 'Laboratorio'), ('AUDITORIO', 'Auditorio'), ('ESPECIAL', 'Especial')], default='TEORICA', max_length=20)),
                ('ubicacion', models.CharField(blank=True, help_text='Ej: Edificio B, Planta 1', max_length=100)),
                ('equipamiento', models.TextField(blank=True, help_text='Listar equipos disponibles: Proyector, Pizarra Inteligente, PCs, etc.')),
                ('disponible', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
                'ordering': ['codigo_aula'],
            },
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=200)),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('especialidades', models.TextField(blank=True, help_text='Áreas de conocimiento o especialización del docente.')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('PROSPECTO', 'Prospecto (Pendiente Entrevista)'), ('ENTREVISTADO', 'Entrevistado (Pendiente Decisión Coordinación)'), ('ACTIVO', 'Activo (Contratado)'), ('INACTIVO', 'Inactivo'), ('RECHAZADO', 'Rechazado')], default='PROSPECTO', max_length=20)),
            ],
            options={
                'verbose_name': 'Docente',
                'verbose_name_plural': 'Docentes',
                'ordering': ['nombre_completo'],
            },
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_materia', models.CharField(max_length=20, unique=True)),
                ('nombre_materia', models.CharField(max_length=150)),
                ('creditos', models.PositiveIntegerField(default=0)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
                'ordering': ['nombre_materia'],
            },
        ),
        migrations.CreateModel(
            name='PeriodoAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej: 2025-I, Semestre Verano 2025', max_length=100, unique=True)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('activo', models.BooleanField(default=False, help_text='Indica si el periodo está actualmente activo para inscripciones/evaluaciones')),
            ],
            options={
                'verbose_name': 'Periodo Académico',
                'verbose_name_plural': 'Periodos Académicos',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='TipoEvaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej: Autoevaluación, Evaluación por Pares, Evaluación Estudiantil, Evaluación Departamental', max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Tipo de Evaluación',
                'verbose_name_plural': 'Tipos de Evaluación',
            },
        ),
        migrations.CreateModel(
            name='EntrevistaDocente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_entrevista', models.DateTimeField(default=django.utils.timezone.now)),
                ('notas', models.TextField(help_text='Observaciones y comentarios de la entrevista.')),
                ('resultado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('RECOMENDADO', 'Recomendado para Coordinación'), ('NO_RECOMENDADO', 'No Recomendado'), ('EN_REVISION', 'En Revisión Adicional')], default='PENDIENTE', max_length=20)),
                ('documento_adjunto', models.FileField(blank=True, help_text='Opcional: CV, carta, etc.', null=True, upload_to='entrevistas_docentes/')),
                ('pasado_a_coordinacion', models.BooleanField(default=False, help_text='Marcar si la información fue enviada a Coordinación.')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrevistas', to='programacion_academica.docente')),
                ('entrevistador', models.ForeignKey(blank=True, help_text='Usuario que realizó la entrevista', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Entrevista de Docente',
                'verbose_name_plural': 'Entrevistas de Docentes',
                'ordering': ['-fecha_entrevista'],
            },
        ),
        migrations.CreateModel(
            name='ProgramacionHoraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('LUN', 'Lunes'), ('MAR', 'Martes'), ('MIE', 'Miércoles'), ('JUE', 'Jueves'), ('VIE', 'Viernes'), ('SAB', 'Sábado'), ('DOM', 'Domingo')], max_length=3)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('aula', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='horarios_asignados', to='programacion_academica.aula')),
                ('docente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='horarios_asignados', to='programacion_academica.docente')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='programacion_academica.materia')),
                ('periodo_academico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programaciones', to='programacion_academica.periodoacademico')),
            ],
            options={
                'verbose_name': 'Programación Horaria',
                'verbose_name_plural': 'Programaciones Horarias',
                'ordering': ['periodo_academico', 'dia_semana', 'hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='EvaluacionDocente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_evaluacion', models.DateField(default=django.utils.timezone.now)),
                ('puntuacion_general', models.DecimalField(blank=True, decimal_places=2, help_text='Puntuación de 0 a 100, o según escala', max_digits=5, null=True)),
                ('observaciones_resultados', models.TextField(help_text='Comentarios, fortalezas, áreas de mejora.')),
                ('archivo_adjunto', models.FileField(blank=True, help_text='Formulario de evaluación, evidencias, etc.', null=True, upload_to='evaluaciones_docentes/')),
                ('evaluacion_completada', models.BooleanField(default=True, help_text='Desmarcar si es una evaluación planificada pero aún no realizada.')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='programacion_academica.docente')),
                ('evaluador', models.ForeignKey(blank=True, help_text='Usuario que realizó la evaluación (si aplica)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('periodo_academico', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaluaciones', to='programacion_academica.periodoacademico')),
                ('tipo_evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='programacion_academica.tipoevaluacion')),
            ],
            options={
                'verbose_name': 'Evaluación de Docente',
                'verbose_name_plural': 'Evaluaciones de Docentes',
                'ordering': ['-fecha_evaluacion'],
                'unique_together': {('docente', 'periodo_academico', 'tipo_evaluacion')},
            },
        ),
    ]
