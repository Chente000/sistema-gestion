# Generated by Django 5.2 on 2025-06-15 04:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('programacion', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServicioSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutor_nombres', models.CharField(max_length=100, verbose_name='Nombres del Tutor')),
                ('tutor_apellidos', models.CharField(max_length=100, verbose_name='Apellidos del Tutor')),
                ('tutor_cedula', models.CharField(max_length=15, verbose_name='Cédula de Identidad del Tutor')),
                ('tutor_tipo', models.CharField(choices=[('administrativo', 'Administrativo'), ('docente', 'Docente')], max_length=20, verbose_name='Tipo de Tutor')),
                ('tutor_unidad_administrativa', models.CharField(blank=True, max_length=100, null=True, verbose_name='Unidad Administrativa (si es Administrativo)')),
                ('tutor_categoria_docente', models.CharField(blank=True, max_length=100, null=True, verbose_name='Categoría Docente (si es Docente)')),
                ('nombre_proyecto', models.CharField(max_length=255, verbose_name='Nombre del Proyecto')),
                ('nombre_comunidad_institucion', models.CharField(max_length=255, verbose_name='Nombre de la Comunidad y/o Institución')),
                ('direccion_comunidad', models.TextField(verbose_name='Dirección de la Comunidad')),
                ('tutor_comunitario_nombre', models.CharField(max_length=100, verbose_name='Nombre del Tutor Comunitario')),
                ('tutor_comunitario_cedula', models.CharField(max_length=15, verbose_name='Cédula de Identidad del Tutor Comunitario')),
                ('tutor_comunitario_telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono del Tutor Comunitario')),
                ('cantidad_beneficiados', models.PositiveIntegerField(help_text='Solo números.', verbose_name='Cantidad de Beneficiados')),
                ('vinculacion_planes_programas', models.TextField(verbose_name='Vinculación del Proyecto con Planes, Programas y/o Proyectos del Ejecutivo Nacional')),
                ('area_accion_proyecto', models.CharField(choices=[('ambiental', 'Ambiental'), ('socioproductivo', 'Socioproductivo'), ('tecnologico', 'Tecnológico'), ('social', 'Social'), ('educativo', 'Educativo'), ('socio_comunitario', 'Socio-Comunitario'), ('otros', 'Otros')], help_text='Selecciona el área principal de acción del proyecto.', max_length=50, verbose_name='Área de Acción del Proyecto')),
                ('act_foros', models.BooleanField(default=False, verbose_name='Foros Realizados')),
                ('act_charlas', models.BooleanField(default=False, verbose_name='Charlas Realizadas')),
                ('act_jornadas', models.BooleanField(default=False, verbose_name='Jornadas Realizadas')),
                ('act_talleres', models.BooleanField(default=False, verbose_name='Talleres Realizados')),
                ('act_campanas', models.BooleanField(default=False, verbose_name='Campañas Realizadas')),
                ('act_reunion_misiones', models.BooleanField(default=False, verbose_name='Reuniones con Misiones Realizadas')),
                ('act_ferias', models.BooleanField(default=False, verbose_name='Ferias Realizadas')),
                ('act_alianzas_estrategicas', models.BooleanField(default=False, verbose_name='Alianzas Estratégicas Realizadas')),
                ('departamento', models.CharField(max_length=100, verbose_name='Departamento')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fecha de Fin')),
                ('horas_cumplidas', models.PositiveIntegerField(verbose_name='Horas Cumplidas')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('finalizado', 'Finalizado')], max_length=50, verbose_name='Estado del Proyecto')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones Generales del Proyecto')),
            ],
            options={
                'verbose_name': 'Servicio Social',
                'verbose_name_plural': 'Servicios Sociales',
            },
        ),
        migrations.CreateModel(
            name='EstudianteServicioSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres del Estudiante')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos del Estudiante')),
                ('cedula_identidad', models.CharField(max_length=15, verbose_name='Cédula de Identidad')),
                ('seccion', models.CharField(max_length=50, verbose_name='Sección')),
                ('turno', models.CharField(choices=[('diurno', 'Diurno'), ('nocturno', 'Nocturno')], max_length=10, verbose_name='Turno')),
                ('observaciones_estudiante', models.TextField(blank=True, null=True, verbose_name='Observaciones del Estudiante')),
                ('carrera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='programacion.carrera', verbose_name='Carrera')),
                ('semestre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='programacion.semestre', verbose_name='Semestre')),
                ('servicio_social', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudiantes_participantes', to='servicio_social.serviciosocial', verbose_name='Servicio Social')),
            ],
            options={
                'verbose_name': 'Estudiante de Servicio Social',
                'verbose_name_plural': 'Estudiantes de Servicio Social',
                'unique_together': {('servicio_social', 'cedula_identidad')},
            },
        ),
    ]
